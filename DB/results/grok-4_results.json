{
    "Werkzeug": {
        "2.0.2": {
            "cves": [
                "CVE-2023-25577",
                "CVE-2024-34069",
                "CVE-2023-46136",
                "CVE-2024-49766",
                "CVE-2024-49767",
                "CVE-2023-23934"
            ],
            "mapping_result": {
                "CVE-2023-25577": {
                    "apis": [
                        "formparser.parse_form_data"
                    ],
                    "reason": "The phrase 'Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts' in the CVE description indicates that formparser.parse_form_data is the function responsible for parsing multipart data, leading to high resource usage when accessing request.data, request.form, request.files, or request.get_data(parse_form_data=False)."
                },
                "CVE-2024-34069": {
                    "apis": [
                        "debug.get_pin_and_cookie_name",
                        "debug.hash_pin"
                    ],
                    "reason": "The phrase 'enter the debugger PIN' in the CVE description points to debug.get_pin_and_cookie_name and debug.hash_pin as functions involved in handling the PIN mechanism, which can be exploited to access the debugger and execute code."
                },
                "CVE-2023-46136": {
                    "apis": [
                        "formparser.parse_form_data"
                    ],
                    "reason": "The phrase 'all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer' in the CVE description implies that formparser.parse_form_data is the function handling multipart parsing, causing denial of service via crafted uploads starting with CR or LF."
                },
                "CVE-2024-49766": {
                    "apis": [
                        "utils.safe_join",
                        "security.safe_join",
                        "middleware.shared_data.safe_join"
                    ],
                    "reason": "The phrase 'Werkzeug's safe_join() relies on this check' in the CVE description directly references safe_join functions, which fail to handle UNC paths on Windows with Python < 3.11, allowing unintended data access."
                },
                "CVE-2024-49767": {
                    "apis": [
                        "formparser.parse_form_data"
                    ],
                    "reason": "The phrase 'using werkzeug.formparser.MultiPartParser to parse multipart/form-data requests' in the CVE description indicates that formparser.parse_form_data utilizes the vulnerable MultiPartParser, leading to resource exhaustion by allocating 3 to 8 times the upload size in memory."
                },
                "CVE-2023-23934": {
                    "apis": [
                        "http.parse_cookie",
                        "debug.parse_cookie",
                        "sansio.request.parse_cookie"
                    ],
                    "reason": "The phrase 'Werkzeug prior to 2.2.3 will parse the cookie `=__Host-test=bad` as __Host-test=bad' in the CVE description shows that parse_cookie functions mishandle nameless cookies, allowing exploitation via vulnerable browsers."
                }
            }
        }
    },
    "PyYAML": {
        "5.3.1": {
            "cves": [
                "CVE-2020-14343"
            ],
            "mapping_result": {
                "CVE-2020-14343": {
                    "apis": [
                        "yaml.full_load",
                        "yaml.full_load_all"
                    ],
                    "reason": "The phrase 'through the full_load method or with the FullLoader loader' in the CVE description indicates that yaml.full_load and yaml.full_load_all are susceptible to arbitrary code execution when processing untrusted YAML files by abusing the python/object/new constructor."
                }
            }
        }
    },
    "setuptools": {
        "58.1.0": {
            "cves": [
                "CVE-2022-40897",
                "CVE-2024-6345",
                "CVE-2025-47273"
            ],
            "mapping_result": {
                "CVE-2022-40897": {
                    "apis": [
                        "package_index.parse_bdist_wininst"
                    ],
                    "reason": "The phrase 'Regular Expression Denial of Service (ReDoS) in package_index.py' in the CVE description indicates that the regex used in package_index.parse_bdist_wininst is vulnerable to ReDoS, exploitable via HTML in a crafted package or custom PackageIndex page containing links with malicious filenames."
                },
                "CVE-2024-6345": {
                    "apis": [],
                    "reason": "The phrase 'vulnerability in the package_index module of pypa/setuptools ... via its download functions' in the CVE description refers to download functions susceptible to code injection, but no such functions are present in the target API list."
                },
                "CVE-2025-47273": {
                    "apis": [],
                    "reason": "The phrase 'path traversal vulnerability in `PackageIndex`' in the CVE description indicates a vulnerability in the PackageIndex class allowing arbitrary file writes, but no specific APIs from the target list are directly related to this functionality."
                }
            }
        }
    }
}