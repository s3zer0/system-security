[
    {
        "library": "PyYAML",
        "version": "5.3.1",
        "response": "{\n    \"CVE-2020-14343\": {\n        \"vulnerable_apis\": [\n            \"yaml.yaml.full_load\",\n            \"yaml.yaml.FullLoader\"\n        ],\n        \"reason\": \"These APIs are responsible for parsing YAML content without adequately restricting the execution of arbitrary Python objects, which can lead to arbitrary code execution. Specifically, the full_load method and FullLoader class permit instantiation of arbitrary Python objects which can exploit the python/object/new constructor.\"\n    }\n}"
    },
    {
        "library": "setuptools",
        "version": "58.1.0",
        "response": "{\n    \"CVE-2022-40897\": {\n        \"vulnerable_apis\": [\n            \"setuptools.setuptools.package_index.PackageIndex\"\n        ],\n        \"reason\": \"This API involves handling package indices where untrusted HTML input can trigger Regular Expression Denial of Service (ReDoS).\"\n    },\n    \"CVE-2024-6345\": {\n        \"vulnerable_apis\": [\n            \"setuptools.setuptools.package_index.PackageIndex\"\n        ],\n        \"reason\": \"The download functions within this API are affected as they handle downloading packages from URLs, which can lead to remote code execution when processing user-controlled inputs without proper validation.\"\n    },\n    \"CVE-2025-47273\": {\n        \"vulnerable_apis\": [\n            \"setuptools.setuptools.package_index.PackageIndex\"\n        ],\n        \"reason\": \"This API handles paths when indexing packages, making it susceptible to path traversal attacks due to improper sanitization of file paths.\"\n    }\n}"
    },
    {
        "library": "Werkzeug",
        "version": "2.0.2",
        "response": "{\n    \"CVE-2023-25577\": {\n        \"vulnerable_apis\": [\n            \"werkzeug.werkzeug.wrappers.request.Request\",\n            \"werkzeug.werkzeug.wrappers.base_request.Request\",\n            \"werkzeug.werkzeug.wrappers.request.get_input_stream\",\n            \"werkzeug.werkzeug.formparser.parse_form_data\",\n            \"werkzeug.werkzeug.formparser.FormDataParser\",\n            \"werkzeug.werkzeug.test.EnvironBuilder\"\n        ],\n        \"reason\": \"These APIs are involved in handling multipart data, potentially parsing an unlimited number of parts causing high CPU and memory usage.\"\n    },\n    \"CVE-2024-34069\": {\n        \"vulnerable_apis\": [\n            \"werkzeug.werkzeug.debug.DebuggedApplication\",\n            \"werkzeug.werkzeug.debug.get_current_traceback\",\n            \"werkzeug.werkzeug.debug.console\"\n        ],\n        \"reason\": \"These APIs are part of the debugging processes that could be exploited, allowing remote code execution.\"\n    },\n    \"CVE-2023-46136\": {\n        \"vulnerable_apis\": [\n            \"werkzeug.werkzeug.formparser.FormDataParser\",\n            \"werkzeug.werkzeug.formparser.parse_form_data\"\n        ],\n        \"reason\": \"These APIs are involved in multipart form parsing and can be exploited by crafted requests to consume resources inefficiently.\"\n    },\n    \"CVE-2024-49766\": {\n        \"vulnerable_apis\": [\n            \"werkzeug.werkzeug.security.safe_join\"\n        ],\n        \"reason\": \"This API relies on os.path.isabs() which does not handle UNC paths correctly on Windows with Python versions prior to 3.11, leading to potential unauthorized data access.\"\n    },\n    \"CVE-2024-49767\": {\n        \"vulnerable_apis\": [\n            \"werkzeug.werkzeug.formparser.MultiPartParser\"\n        ],\n        \"reason\": \"This API can be exploited by specially crafted requests that cause excessive memory allocation due to inefficient handling of multipart/form-data.\"\n    },\n    \"CVE-2023-23934\": {\n        \"vulnerable_apis\": [\n            \"werkzeug.werkzeug.http.parse_cookie\"\n        ],\n        \"reason\": \"This API improperly handles malformed cookie strings which could be exploited by adjacent domains in certain browser contexts.\"\n    }\n}"
    }
]